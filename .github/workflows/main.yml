
name: Build

on:
  release:
    types: [published]
  push:

jobs:
  BuildBinary:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      steps:
      - uses: actions/checkout@v2 

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y jq

      - name: Build
        run: |         
          export VERSION="`if [[ $GITHUB_REF == refs\/tags* ]]; then echo ${GITHUB_REF//refs\/tags\//}; fi`"
          if [ "$VERSION" = "" ];
          then
            export VERSION="SNAPSHOT"
          fi
          bash build.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hypergate
          path: deploy
      
      - name: Upload hypergate binary
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: deploy/hypergate
          asset_name: hypergate
          tag: ${{ github.ref }}
          overwrite: true

      - name: Upload hypergate hash
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: deploy/hypergate.sha256
          asset_name: hypergate.sha256
          tag: ${{ github.ref }}
          overwrite: true
    
  BuildContainer:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      steps:  
      - uses: actions/checkout@v2 
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y jq
      - name: Build and push to registry
        run: |
          VERSION="snapshot"
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          bash setversion.sh
          echo ${{ secrets.GITHUB_TOKEN }} | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker build -t hypergate:$VERSION . -f docker/Dockerfile
          docker tag hypergate:$VERSION docker.pkg.github.com/${{ github.repository }}/hypergate:${VERSION}
          docker push docker.pkg.github.com/${{ github.repository }}/hypergate:${VERSION}

  # BuildWithNPM:
  #     runs-on: ubuntu-latest
  #     permissions:
  #       contents: read
  #       packages: write
  #     steps:
  #     - uses: actions/checkout@v2 
  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v3.6.0
  #       with:
  #         node-version: 16.x
  #         registry-url: 'https://npm.pkg.github.com'
  #     - name: Install dependencies
  #       run: |
  #         sudo apt update
  #         sudo apt install -y jq
  #     - name: Build
  #       run: |
  #           VERSION="snapshot"
  #           if [[ $GITHUB_REF == refs/tags/* ]]; then
  #             VERSION=${GITHUB_REF#refs/tags/}
  #           fi    
  #           bash setversion.sh     
  #           npm install --production
  #     - name: Publish
  #       run: |
  #         echo @lexacode:https://npm.pkg.github.com/ > .npmrc
  #         echo '//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}' >> .npmrc
  #         npm publish
        
        
      
